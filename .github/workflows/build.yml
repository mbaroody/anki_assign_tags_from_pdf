name: Build and Package Binaries

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build binaries
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka
          pip install -r requirements.txt

      - name: Install ccache
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y ccache
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            brew update
            brew install ccache
          fi

      - name: Build Binary
        run: |
          mkdir -p dist
          python -m nuitka --standalone --onefile anki_assign_tags.py --output-dir=dist

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          name: linux-binary
          path: dist/anki_assign_tags.bin

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        if: matrix.os == 'macos-latest'
        with:
          name: macos-binary
          path: dist/anki_assign_tags.bin

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        if: matrix.os == 'windows-latest'
        with:
          name: windows-binary
          path: dist/anki_assign_tags.bin